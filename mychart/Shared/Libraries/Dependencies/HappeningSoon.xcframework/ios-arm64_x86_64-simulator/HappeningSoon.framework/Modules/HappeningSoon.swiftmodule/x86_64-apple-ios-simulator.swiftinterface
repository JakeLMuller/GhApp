// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name HappeningSoon
import Foundation
@_exported import HappeningSoon
import PECore
import Swift
import WebKit
public enum TimePrecision : Swift.Int, Swift.Codable {
  case exact
  case nearby
  case timeOfDay
  case dayOnly
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
public enum InpatientEventType : Swift.Int, Swift.Codable {
  case userEvent
  case medicationAdministration
  case nursingTask
  case surgery
  case appointment
  case HOVAppointment
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class PEHappeningSoonComponentAPI : ObjectiveC.NSObject, PECore.PEHappeningSoonComponentAPIProtocol {
  @objc public func hasAccessForHappeningSoon(_ encounterContext: PECore.PEEncounterContext) -> PECore.PEComponentAccessResult
  @objc public func getHappeningSoonTimelineWidgetteViewController(_ encounterContext: PECore.PEEncounterContext, componentHost: PECore.PEComponentHostProtocol) -> UIKit.UIViewController?
  @objc deinit
  @objc override dynamic public init()
}
extension HappeningSoon.TimePrecision : Swift.Equatable {}
extension HappeningSoon.TimePrecision : Swift.Hashable {}
extension HappeningSoon.TimePrecision : Swift.RawRepresentable {}
extension HappeningSoon.InpatientEventType : Swift.Equatable {}
extension HappeningSoon.InpatientEventType : Swift.Hashable {}
extension HappeningSoon.InpatientEventType : Swift.RawRepresentable {}
