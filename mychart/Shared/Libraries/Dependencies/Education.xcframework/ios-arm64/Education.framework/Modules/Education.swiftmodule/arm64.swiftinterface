// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Education
@_exported import Education
import Foundation
import PECore
import Swift
import UIKit
public class EducationWebViewControllerManager : PECore.MyChartWebViewControllerManager {
  public init(delegate: PECore.PEEducationPointCompletionDelegate?, shouldLaunchMedicalAdviceMessageComposer launchComposer: Swift.Bool, educationName name: Swift.String, patientContext context: PECore.PEPatientContext)
  override public func shouldOverrideAllowedPageLoad(_ viewController: PECore.MyChartWebViewController, url: Foundation.URL, isMyChartWebsite: Swift.Bool) -> Swift.Bool
  override public func onViewWillAppear(_ controller: PECore.MyChartWebViewController)
  override public func onViewWillDisappear(_ controller: PECore.MyChartWebViewController)
  override public func getNotificationsToObserve() -> [Foundation.Notification]?
  override public func onReceiveNotifications(_ viewController: PECore.MyChartWebViewController, notificationName: Swift.String)
  @objc deinit
  @objc override dynamic public init()
}
@objc public enum EducationStatus : Swift.Int, Swift.Codable {
  case Unread = 0
  case Read = 1
  case Done = 2
  case Hidden = 3
  case Question = 4
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class PEEducationComponentAPI : ObjectiveC.NSObject, PECore.PEEducationComponentAPIProtocol {
  public static let UnreadColor: UIKit.UIColor
  @objc public func getInpatientEducationTitlesViewController(_ encounterContext: PECore.PEEncounterContext, viewControllerTitle: Swift.String?) -> UIKit.UIViewController?
  @objc public func getOutpatientEducationTitlesViewController(_ patientContext: PECore.PEPatientContext, viewControllerTitle: Swift.String?) -> UIKit.UIViewController?
  @objc public func hasAccessForInpatientEducation(_ patientContext: PECore.PEPatientContext) -> PECore.PEComponentAccessResult
  @objc public func hasAccessForOutpatientEducation(_ patientContext: PECore.PEPatientContext) -> PECore.PEComponentAccessResult
  @objc public func getEducationPointViewController(userContext: PECore.PEUserContext, patientContext: PECore.PEPatientContext, pointID: Swift.String, educationTitle: Swift.String, completionDelegate: PECore.PEEducationPointCompletionDelegate?, shouldLaunchMedicalAdviceMessageComposer: Swift.Bool, buttonStyle: PECore.PEEducationButtonStyle, pointStatus: Foundation.NSNumber?, educationKey: Swift.String) -> PECore.MyChartWebViewController?
  @objc deinit
  @objc override dynamic public init()
}
extension Education.EducationStatus : Swift.Equatable {}
extension Education.EducationStatus : Swift.Hashable {}
extension Education.EducationStatus : Swift.RawRepresentable {}
